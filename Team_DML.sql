-- 학원 학생들 테이블
SELECT * from TAB;
SELECT * from MEMBER;
ALTER TABLE MEMBER RENAME COLUMN MEM_AGE TO AGE;

CREATE TABLE TEAMZ(
    TEAM_ID VARCHAR2(20) PRIMARY KEY,
    TEAM_NAME VARCHAR(20)
);
ALTER TABLE TEAMZ
RENAME TO PROJECT_TEAM;

CREATE TABLE TEAMW(
    MEM_ID VARCHAR2(20) PRIMARY KEY,
    TEAM_ID VARCHAR2(20),
    MEM_NAME NVARCHAR2(20),
    MEM_AGE DECIMAL,
    ROLL VARCHAR2(20)
);  

ALTER TABLE TEAMW
RENAME TO MEMBER;

INSERT INTO TEAMZ(
    TEAM_ID, TEAM_NAME
)
    VALUES(
    'ATEAM', '저스티스'
);
INSERT INTO TEAMZ(
    TEAM_ID, TEAM_NAME
)
    VALUES(
    'HTEAM', '엘카로' 
);
INSERT INTO TEAMZ(
    TEAM_ID, TEAM_NAME
)
    VALUES(
    'CTEAM', '가오갤'
);
INSERT INTO TEAMZ(
    TEAM_ID, TEAM_NAME
)
    VALUES(
    'STEAM', '어벤저스' 
);

INSERT INTO TEAMW(
    MEM_ID, TEAM_ID,MEM_NAME, MEM_AGE
)VALUES
(
    'A1','ATEAM','형준',34
);
INSERT INTO TEAMW(
    MEM_ID, TEAM_ID,MEM_NAME, MEM_AGE
)VALUES
(
    'A2','ATEAM','세인',35
);
INSERT INTO TEAMW(
    MEM_ID, TEAM_ID,MEM_NAME, MEM_AGE
)VALUES
(
    'A3','ATEAM','희태',21
);
INSERT INTO TEAMW(
    MEM_ID, TEAM_ID,MEM_NAME, MEM_AGE
)VALUES
(
    'A4','ATEAM','상훈',29
);
INSERT INTO TEAMW(
    MEM_ID, TEAM_ID,MEM_NAME, MEM_AGE
)VALUES
(
    'A5','ATEAM','태형',25
);
INSERT INTO TEAMW(
    MEM_ID, TEAM_ID,MEM_NAME, MEM_AGE
)VALUES
(
    'H6','HTEAM','혜리',26
);
INSERT INTO TEAMW(
    MEM_ID, TEAM_ID,MEM_NAME, MEM_AGE
)VALUES
(
    'H7','HTEAM','지은',26
);
INSERT INTO TEAMW(
    MEM_ID, TEAM_ID,MEM_NAME, MEM_AGE
)VALUES
(
    'H8','HTEAM','준',27
);
INSERT INTO TEAMW(
    MEM_ID, TEAM_ID,MEM_NAME, MEM_AGE
)VALUES
(
    'H9','HTEAM','재경',30
);
INSERT INTO TEAMW(
    MEM_ID, TEAM_ID,MEM_NAME, MEM_AGE
)VALUES
(
    'H10','HTEAM','단아',26
);
INSERT INTO TEAMW(
    MEM_ID, TEAM_ID,MEM_NAME, MEM_AGE
)VALUES
(
    'C11','CTEAM','최정훈',32
);
INSERT INTO TEAMW(
    MEM_ID, TEAM_ID,MEM_NAME, MEM_AGE
)VALUES
(
    'C12','CTEAM','윤호',31
);
INSERT INTO TEAMW(
    MEM_ID, TEAM_ID,MEM_NAME, MEM_AGE
)VALUES
(
    'C13','CTEAM','가은',29
);
INSERT INTO TEAMW(
    MEM_ID, TEAM_ID,MEM_NAME, MEM_AGE
)VALUES
(
    'C14','CTEAM','정훈',23
);
INSERT INTO TEAMW(
    MEM_ID, TEAM_ID,MEM_NAME, MEM_AGE
)VALUES
(
    'C15','CTEAM','승태',30
);
INSERT INTO TEAMW(
    MEM_ID, TEAM_ID,MEM_NAME, MEM_AGE
)VALUES
(
    'S16','STEAM','승호',27
);
INSERT INTO TEAMW(
    MEM_ID, TEAM_ID,MEM_NAME, MEM_AGE
)VALUES
(
    'S17','STEAM','소진',26
);
INSERT INTO TEAMW(
    MEM_ID, TEAM_ID,MEM_NAME, MEM_AGE
)VALUES
(
    'S18','STEAM','이슬',29
);
INSERT INTO TEAMW(
    MEM_ID, TEAM_ID,MEM_NAME, MEM_AGE
)VALUES
(
    'S19','STEAM','진태',26
);
INSERT INTO TEAMW(
    MEM_ID, TEAM_ID,MEM_NAME, MEM_AGE
)VALUES
(
    'S20','STEAM','누리',30
);

--팀별 팀원수
SELECT TZ.TEAM_NAME 팀, COUNT(*) 팀원수 
FROM TEAMZ TZ
    JOIN TEAMW TW
    ON TZ.TEAM_ID LIKE TW.TEAM_ID
GROUP BY TZ.TEAM_NAME
ORDER BY TZ.TEAM_NAME;

SELECT (SELECT TEAM_NAME 
        FROM TEAMZ
        WHERE TEAM_ID LIKE TZ.TEAM_ID) 팀명
        , COUNT(*) 팀원수 
FROM TEAMZ TZ
    JOIN TEAMW TW
    ON TZ.TEAM_ID LIKE TW.TEAM_ID
GROUP BY TZ.TEAM_ID
ORDER BY TZ.TEAM_ID;

--SUM()팀원 나이합
SELECT (SELECT TEAM_NAME 
        FROM TEAMZ
        WHERE TEAM_ID LIKE TZ.TEAM_ID) 팀명, SUM(TW.MEM_AGE) "나이합"
FROM TEAMZ TZ
    JOIN TEAMW TW
    ON TZ.TEAM_ID LIKE TW.TEAM_ID
GROUP BY TZ.TEAM_ID
;

--MAX()팀원 나이최대치
SELECT (SELECT TEAM_NAME 
        FROM TEAMZ
        WHERE TEAM_ID LIKE TZ.TEAM_ID) 팀명, MAX(TW.MEM_AGE) "나이최대"
FROM TEAMZ TZ
    JOIN TEAMW TW
    ON TZ.TEAM_ID LIKE TW.TEAM_ID
GROUP BY TZ.TEAM_ID;

--MIN()팀원나이최소치
SELECT (SELECT TEAM_NAME 
        FROM TEAMZ
        WHERE TEAM_ID LIKE TZ.TEAM_ID) 팀명, MIN(TW.MEM_AGE) "나이최소"
FROM TEAMZ TZ
    JOIN TEAMW TW
    ON TZ.TEAM_ID LIKE TW.TEAM_ID
GROUP BY TZ.TEAM_ID;

--AVG()팀원 나이평균
SELECT (SELECT TEAM_NAME 
        FROM TEAMZ
        WHERE TEAM_ID LIKE TZ.TEAM_ID) 팀명, AVG(TW.MEM_AGE) "나이평균"
FROM TEAMZ TZ
    JOIN TEAMW TW
    ON TZ.TEAM_ID LIKE TW.TEAM_ID
GROUP BY TZ.TEAM_ID;

-- 다 합쳐서
SELECT (SELECT TEAM_NAME 
        FROM TEAMZ
        WHERE TEAM_ID LIKE TZ.TEAM_ID) 팀명,
        COUNT(*) 팀원수,
        SUM(TW.MEM_AGE) "나이합",
        MAX(TW.MEM_AGE) "나이최대",
        MIN(TW.MEM_AGE) "나이최소",
        AVG(TW.MEM_AGE) "나이평균"
FROM TEAMZ TZ
    JOIN TEAMW TW
        ON TZ.TEAM_ID LIKE TW.TEAM_ID
GROUP BY TZ.TEAM_ID

ORDER BY TZ.TEAM_ID;

--포린키 제약조건
ALTER TABLE TEAMW ADD CONSTRAINT TEAM_fk_TEAM_ID
FOREIGN KEY (TEAM_ID) REFERENCES TEAMZ(TEAM_ID);

-- 포린키 제약조건 삭제
ALTER TABLE TEAMW DROP CONSTRAINT team_fk_team_id;

SELECT Z.TEAM_ID 팀ID,
    Z.TEAM_NAME 이름,
    CASE
        WHEN W.ROLL LIKE '조장' THEN '없음'
    END 역할
FROM TEAMW W
    JOIN TEAMZ Z
        ON W.TEAM_ID LIKE Z.TEAM_ID;
        
UPDATE TEAMW
SET ROLL =
    CASE
         WHEN MEM_NAME IN ('형준','혜리','최정훈','승호') THEN '팀장'
         ELSE '팀원'
    END;    
SELECT * FROM TEAMW;
SELECT * FROM TEAMZ;

--COLUMN 삭제
ALTER TABLE TEAMW DROP COLUMN ROLL;
--COLUMN 추가
ALTER TABLE TEAMW ADD (ROLL VARCHAR2(20));

CREATE TABLE EXAM(
    EXAM_SEQ DECIMAL PRIMARY KEY,
    MEM_ID VARCHAR2(20),
    SUB_SEQ DECIMAL,
    SCORE VARCHAR2(20),
    MONTH VARCHAR2(20),
    RECORD_SEQ DECIMAL
);
CREATE TABLE RECORD(
    RECORD_SEQ DECIMAL PRIMARY KEY,
    GRADE VARCHAR2(20),
    AVG VARCHAR2(20)
);
CREATE TABLE SUBJECT(
    SUB_SEQ DECIMAL PRIMARY KEY,
    SUB_NAME VARCHAR2(20)
);
ALTER TABLE exam ADD CONSTRAINT member_fk_mem_id
    FOREIGN KEY (mem_id) REFERENCES member(mem_id);

ALTER TABLE exam ADD CONSTRAINT record_fk_record_seq
    FOREIGN KEY (record_seq) REFERENCES record(record_seq);

ALTER TABLE exam ADD CONSTRAINT subject_fk_sub_seq
    FOREIGN KEY (sub_seq) REFERENCES subject(sub_seq);
        
DESC SUBJECT;
CREATE SEQUENCE sub_seq
start with 1
increment BY 1;
drop sequence sub_seq;

INSERT INTO SUBJECT (
    SUB_SEQ,
    SUB_NAME
)
VALUES
(
    SUB_SEQ.NEXTVAL,
    'JAVA'
);
INSERT INTO SUBJECT (
    SUB_SEQ,
    SUB_NAME
)
VALUES
(
    SUB_SEQ.NEXTVAL,
    'SQL'
);
INSERT INTO SUBJECT (
    SUB_SEQ,
    SUB_NAME
)
VALUES
(
    SUB_SEQ.NEXTVAL,
    'HTML5'
);
INSERT INTO SUBJECT (
    SUB_SEQ,
    SUB_NAME
)
VALUES
(
    SUB_SEQ.NEXTVAL,
    'R'
);
INSERT INTO SUBJECT (
    SUB_SEQ,
    SUB_NAME
)
VALUES
(
    SUB_SEQ.NEXTVAL,
    'PYTHON'
);
drop table subject;
desc subject;
delete from subject
where sub_seq >20; 

SELECT * from SUBJECT;
SELECT * from EXAM;
SELECT * from RECORD;
SELECT * from MEMBER;
SELECT * from PROJECT_TEAM;
SELECT * from TAB;
